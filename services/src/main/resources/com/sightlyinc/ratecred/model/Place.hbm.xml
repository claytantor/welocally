<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
    	
<hibernate-mapping 
	package="com.sightlyinc.ratecred.model">
	<class name="Place" table="place">
	
		<cache usage="read-write"/>
		
		<id name="id" column="id" unsaved-value="null">
			<generator class="native" />
		</id>
				
		<version name="version" column="version" />	
		
		<property name="name" column="name" type="java.lang.String"/>
		<property name="type" column="type" type="java.lang.String"/>
		<property name="address" column="address1" type="java.lang.String"/>
		<property name="city" column="city" type="java.lang.String"/>
		<property name="state" column="state" type="java.lang.String"/>
		<property name="zip" column="zip" type="java.lang.String"/>
		
		<property name="twitterId" column="twitter_id" type="java.lang.String"/>
		
		<property name="simpleGeoId"  type="java.lang.String" length="32000">
			<column name="sg_id" sql-type="longtext"/>
		</property>	
		
		<property name="email" column="email" type="java.lang.String"/>
		<property name="businessServices" column="business_services" type="java.lang.String"/>
		
		<property name="phone" column="phone" type="java.lang.String"/>
		<property name="flag" column="flag" type="java.lang.String"/>
		
		<property name="description"  type="java.lang.String" length="32000">
			<column name="descr" sql-type="longtext"/>
		</property>			

		<property name="website"  type="java.lang.String" length="32000">
			<column name="website" sql-type="longtext"/>
		</property>		
		
		<property name="latitude" column="latitude" type="java.lang.Double"/>	
		<property name="longitude" column="longitude" type="java.lang.Double"/>	
		<property name="timeCreated" column="time_created" type="java.util.Date"/>	
							
	 	<set name="ratings" 
	 		lazy="extra"
			fetch="select"
			order-by="time_mills desc"
			cascade="all">
	        <key column="place_id"/>
	        <one-to-many class="Rating"/>
	    </set>

	 	<set name="attributes" 
	 		lazy="extra"
			fetch="select"
			cascade="all">
	        <key column="place_id"/>
	        <one-to-many class="PlaceAttribute"/>
	    </set>

	 	<set name="placeRatings" 
	 		lazy="extra"
			fetch="select"
			cascade="all">
	        <key column="place_id"/>
	        <one-to-many class="PlaceRating"/>
	    </set>
	    
	    <many-to-one
			lazy="no-proxy" 
			fetch="select"
			name="businessLocation"
			class="BusinessLocation"
			column="business_location_id"
			cascade="all"/>	

														
	</class>
</hibernate-mapping>